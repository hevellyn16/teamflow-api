// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(MEMBRO)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isActive  Boolean  @default(true) @map("is_active")
  deletedAt DateTime? @map("deleted_at")
  isDeleted Boolean  @default(false) @map("is_deleted")
  avatar    String?  // URL do avatar do usu√°rio

  projects   Project[]

  @@map("users")
}

enum Role {
  DIRETOR
  COORDENADOR
  MEMBRO
}


model Sector {
  id        String   @id @default(uuid())
  name      String   @unique
  description String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isActive  Boolean  @default(true) @map("is_active")
  deletedAt DateTime? @map("deleted_at")

  projects  Project[]

  @@map("sectors")

}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  isActive    Boolean  @default(true) @map("is_active")
  deletedAt   DateTime? @map("deleted_at")
  status      ProjectStatus @default(PLANEJAMENTO)
  startDate   DateTime? @map("start_date")

  sectorId String @map("sector_id")
  sector   Sector @relation(fields: [sectorId], references: [id])
  
  users User[] 

  @@map("projects")

  @@unique([name, sectorId], name: "unique_project_name_per_sector")
}

enum ProjectStatus {
  PLANEJAMENTO
  EM_ANDAMENTO
  PAUSADO
  CONCLUIDO
}
